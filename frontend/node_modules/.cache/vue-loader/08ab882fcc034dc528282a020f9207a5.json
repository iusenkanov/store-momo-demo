{"remainingRequest":"/Users/iskenderusenkanov/Kubernetes/momo-store-demo/frontend/node_modules/vue-loader-v16/dist/index.js??ref--1-1!/Users/iskenderusenkanov/Kubernetes/momo-store-demo/frontend/src/views/Login.vue?vue&type=style&index=0&id=3c9b6f4b&scoped=true&lang=css","dependencies":[{"path":"/Users/iskenderusenkanov/Kubernetes/momo-store-demo/frontend/src/views/Login.vue","mtime":1743484457795},{"path":"/Users/iskenderusenkanov/Kubernetes/momo-store-demo/frontend/node_modules/css-loader/dist/cjs.js","mtime":1743485460932},{"path":"/Users/iskenderusenkanov/Kubernetes/momo-store-demo/frontend/node_modules/vue-loader-v16/dist/stylePostLoader.js","mtime":1743485461135},{"path":"/Users/iskenderusenkanov/Kubernetes/momo-store-demo/frontend/node_modules/postcss-loader/src/index.js","mtime":1743485460970},{"path":"/Users/iskenderusenkanov/Kubernetes/momo-store-demo/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1743485460826},{"path":"/Users/iskenderusenkanov/Kubernetes/momo-store-demo/frontend/node_modules/vue-loader-v16/dist/index.js","mtime":1743485460970}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CiAgLmNhcmQgewogICAgd2lkdGg6IDQwMHB4OwogIH0K"},{"version":3,"sources":["/Users/iskenderusenkanov/Kubernetes/momo-store-demo/frontend/src/views/Login.vue"],"names":[],"mappings":";EAwGE,CAAC,CAAC,CAAC,CAAC,EAAE;IACJ,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;EACd","file":"/Users/iskenderusenkanov/Kubernetes/momo-store-demo/frontend/src/views/Login.vue","sourceRoot":"","sourcesContent":["<template>\n  <div class=\"container d-flex flex-column justify-content-between align-items-stretch h-100\">\n\n    <div>\n      <Alert v-if=\"error\" v-model=\"error\" class=\"alert-danger\"/>\n    </div>\n\n    <Center>\n\n      <Spinner \n        v-if=\"loading\"\n        size=\"8rem\"\n        thickness=\"1.25rem\"\n      />\n\n      <div v-else class=\"card d-inline-block text-start\">\n        <form @submit.prevent=\"login\">\n\n          <div class=\"card-header\">\n            <h3 class=\"card-title\">Login</h3>\n          </div>\n\n          <div class=\"card-body\">\n            <div class=\"form-group mb-3\">\n              <label for=\"email\">Email</label>\n              <input type=\"email\" class=\"form-control\" id=\"email\" v-model=\"email\" />\n            </div>\n            <div class=\"form-group mb-3\">\n              <label for=\"password\">Password</label>\n              <input type=\"password\" class=\"form-control\" id=\"password\" v-model=\"password\" />\n            </div>\n          </div>\n\n          <div class=\"card-footer text-end\">\n            <button type=\"submit\" class=\"btn btn-primary\">Login</button>\n          </div>\n\n        </form>\n      </div>\n\n    </Center>\n\n    <div></div>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent } from 'vue'\nimport { AxiosError } from 'axios';\n\nimport Spinner from '@/components/misc/Spinner.vue'\nimport Center from '@/components/misc/Center.vue'\nimport Alert from '@/components/misc/Alert.vue'\n\nexport default defineComponent({\n  name: 'Login',\n  components: {\n    Spinner,\n    Center,\n    Alert\n  },\n  data() {\n    return {\n      email: '',\n      password: '',\n      loading: false,\n      error: '',\n      goto: ''\n    }\n  },\n  created() {\n    \n    if(this.$store.state.auth.isLoggedIn) {\n      return this.$router.push('/profile');\n    }\n\n    const url = new URL(window.location.href);\n    this.goto = url.searchParams.get('goto') as string;\n  },\n  methods: {\n    login() {\n      this.loading = true;\n      this.$store.dispatch('login', {\n        email: this.email,\n        password: this.password\n      }).then((result: any) => {\n        this.$router.push(this.goto || '/');\n      }).catch((error: AxiosError) => {\n\n        if(!error.isAxiosError || !error.response) {\n          this.error = 'Connection error';\n        } else {\n          this.error = error.response.data.detail;\n        }\n\n        this.loading = false;\n\n      });\n    }\n  }\n})\n</script>\n\n<style scoped>\n  .card {\n    width: 400px;\n  }\n</style>"]}]}