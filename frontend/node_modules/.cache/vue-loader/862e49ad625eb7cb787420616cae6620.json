{"remainingRequest":"/Users/iskenderusenkanov/Kubernetes/momo-store-demo/frontend/node_modules/vue-loader-v16/dist/index.js??ref--1-1!/Users/iskenderusenkanov/Kubernetes/momo-store-demo/frontend/src/components/catalog/Pagination.vue?vue&type=style&index=0&id=7fe641d6&scoped=true&lang=css","dependencies":[{"path":"/Users/iskenderusenkanov/Kubernetes/momo-store-demo/frontend/src/components/catalog/Pagination.vue","mtime":1743484457791},{"path":"/Users/iskenderusenkanov/Kubernetes/momo-store-demo/frontend/node_modules/css-loader/dist/cjs.js","mtime":1743485460932},{"path":"/Users/iskenderusenkanov/Kubernetes/momo-store-demo/frontend/node_modules/vue-loader-v16/dist/stylePostLoader.js","mtime":1743485461135},{"path":"/Users/iskenderusenkanov/Kubernetes/momo-store-demo/frontend/node_modules/postcss-loader/src/index.js","mtime":1743485460970},{"path":"/Users/iskenderusenkanov/Kubernetes/momo-store-demo/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1743485460826},{"path":"/Users/iskenderusenkanov/Kubernetes/momo-store-demo/frontend/node_modules/vue-loader-v16/dist/index.js","mtime":1743485460970}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgogIGlucHV0IHsKICAgIHdpZHRoOiAxMDBweDsKICB9Cgo="},{"version":3,"sources":["/Users/iskenderusenkanov/Kubernetes/momo-store-demo/frontend/src/components/catalog/Pagination.vue"],"names":[],"mappings":";;EAkCE,CAAC,CAAC,CAAC,CAAC,EAAE;IACJ,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;EACd","file":"/Users/iskenderusenkanov/Kubernetes/momo-store-demo/frontend/src/components/catalog/Pagination.vue","sourceRoot":"","sourcesContent":["<template>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent } from 'vue';\nimport PaginationModel from '@/models/pagination.model';\nimport ProductModel from '@/models/product.model';\n\nexport default defineComponent({\n  props: {\n    products: {\n      type: Object as () => PaginationModel<ProductModel>,\n      required: true\n    }\n  },\n  emits: ['pageChange'],\n  methods: {\n    setPage(page: number) {\n      if (page > 0 && page <= this.products.total_pages) {\n        this.products.current_page = page;\n        this.$emit('pageChange', page);\n      }\n    },\n    handleBur(event: FocusEvent) {\n      const target = event.target as HTMLInputElement;\n      this.setPage(Number(target.value));\n      target.value = this.products.current_page.toString();\n    }\n  }\n})\n</script>\n\n<style scoped>\n\n  input {\n    width: 100px;\n  }\n\n</style>"]}]}